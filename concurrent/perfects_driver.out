
pause for 5 secs to coalesce ...

python3.13 perfects.py -n 1_000_000 -w 10
2024-10-23 02:51:00,619 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:04.291743

pause for 5 secs to coalesce ...

python3.13 perfects.py -n 1_000_000 -w 10 -v
2024-10-23 02:51:05,663 - perfects - log_exec_ctx - DEBUG - sys.version='3.13.0 (main, Oct  8 2024, 00:00:00) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)]'
2024-10-23 02:51:05,664 - perfects - log_gil_availability - DEBUG - GIL is active
2024-10-23 02:51:05,664 - perfects - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Processes: 'processes'>, max_n=1000000, num_workers=10, verbose=True)
2024-10-23 02:51:05,664 - perfects - <module> - DEBUG - bootstrapping ...
2024-10-23 02:51:05,719 - perfects - find_perfect_numbers_range - DEBUG - Worker-0 processing (1, 100_002)
2024-10-23 02:51:05,733 - perfects - find_perfect_numbers_range - DEBUG - Worker-1 processing (100_003, 200_004)
2024-10-23 02:51:05,741 - perfects - find_perfect_numbers_range - DEBUG - Worker-2 processing (200_005, 300_006)
2024-10-23 02:51:05,745 - perfects - find_perfect_numbers_range - DEBUG - Worker-3 processing (300_007, 400_008)
2024-10-23 02:51:05,746 - perfects - find_perfect_numbers_range - DEBUG - Worker-4 processing (400_009, 500_010)
2024-10-23 02:51:05,746 - perfects - find_perfect_numbers_range - DEBUG - Worker-5 processing (500_011, 600_012)
2024-10-23 02:51:05,746 - perfects - find_perfect_numbers_range - DEBUG - Worker-6 processing (600_013, 700_014)
2024-10-23 02:51:05,746 - perfects - find_perfect_numbers_range - DEBUG - Worker-7 processing (700_015, 800_016)
2024-10-23 02:51:05,750 - perfects - find_perfect_numbers_range - DEBUG - Worker-8 processing (800_017, 900_018)
2024-10-23 02:51:05,750 - perfects - find_perfect_numbers_range - DEBUG - Worker-9 processing (900_019, 1_000_000)
2024-10-23 02:51:06,842 - perfects - find_perfect_numbers - DEBUG - Adding result from Worker-0
2024-10-23 02:51:07,470 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-1
2024-10-23 02:51:08,151 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-2
2024-10-23 02:51:08,413 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-5
2024-10-23 02:51:08,433 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-4
2024-10-23 02:51:08,454 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-3
2024-10-23 02:51:08,827 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-6
2024-10-23 02:51:09,571 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-8
2024-10-23 02:51:09,747 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-7
2024-10-23 02:51:09,926 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-9
2024-10-23 02:51:09,958 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:04.294041
2024-10-23 02:51:09,958 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.13 perfects.py -n 1_000_000 -w 10 -p
2024-10-23 02:51:19,268 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:04.263898

pause for 5 secs to coalesce ...

python3.13 perfects.py -n 1_000_000 -w 10 -v -p
2024-10-23 02:51:24,313 - perfects - log_exec_ctx - DEBUG - sys.version='3.13.0 (main, Oct  8 2024, 00:00:00) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)]'
2024-10-23 02:51:24,314 - perfects - log_gil_availability - DEBUG - GIL is active
2024-10-23 02:51:24,314 - perfects - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Processes: 'processes'>, max_n=1000000, num_workers=10, verbose=True)
2024-10-23 02:51:24,314 - perfects - <module> - DEBUG - bootstrapping ...
2024-10-23 02:51:24,376 - perfects - find_perfect_numbers_range - DEBUG - Worker-0 processing (1, 100_002)
2024-10-23 02:51:24,380 - perfects - find_perfect_numbers_range - DEBUG - Worker-1 processing (100_003, 200_004)
2024-10-23 02:51:24,384 - perfects - find_perfect_numbers_range - DEBUG - Worker-2 processing (200_005, 300_006)
2024-10-23 02:51:24,394 - perfects - find_perfect_numbers_range - DEBUG - Worker-3 processing (300_007, 400_008)
2024-10-23 02:51:24,396 - perfects - find_perfect_numbers_range - DEBUG - Worker-4 processing (400_009, 500_010)
2024-10-23 02:51:24,398 - perfects - find_perfect_numbers_range - DEBUG - Worker-5 processing (500_011, 600_012)
2024-10-23 02:51:24,398 - perfects - find_perfect_numbers_range - DEBUG - Worker-6 processing (600_013, 700_014)
2024-10-23 02:51:24,398 - perfects - find_perfect_numbers_range - DEBUG - Worker-7 processing (700_015, 800_016)
2024-10-23 02:51:24,398 - perfects - find_perfect_numbers_range - DEBUG - Worker-8 processing (800_017, 900_018)
2024-10-23 02:51:24,399 - perfects - find_perfect_numbers_range - DEBUG - Worker-9 processing (900_019, 1_000_000)
2024-10-23 02:51:25,776 - perfects - find_perfect_numbers - DEBUG - Adding result from Worker-0
2024-10-23 02:51:26,206 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-2
2024-10-23 02:51:26,592 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-1
2024-10-23 02:51:26,780 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-3
2024-10-23 02:51:27,504 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-4
2024-10-23 02:51:28,199 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-6
2024-10-23 02:51:28,297 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-8
2024-10-23 02:51:28,455 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-5
2024-10-23 02:51:28,526 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-7
2024-10-23 02:51:28,979 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-9
2024-10-23 02:51:29,010 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:04.696332
2024-10-23 02:51:29,010 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.13 perfects.py -n 1_000_000 -w 10 -s
2024-10-23 02:51:53,503 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:19.448831

pause for 5 secs to coalesce ...

python3.13 perfects.py -n 1_000_000 -w 10 -v -s
2024-10-23 02:51:58,549 - perfects - log_exec_ctx - DEBUG - sys.version='3.13.0 (main, Oct  8 2024, 00:00:00) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)]'
2024-10-23 02:51:58,549 - perfects - log_gil_availability - DEBUG - GIL is active
2024-10-23 02:51:58,549 - perfects - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Single: 'single'>, max_n=1000000, num_workers=10, verbose=True)
2024-10-23 02:51:58,550 - perfects - <module> - DEBUG - bootstrapping ...
2024-10-23 02:51:58,550 - perfects - find_perfect_numbers_range - DEBUG -  processing (1, 1_000_001)
2024-10-23 02:52:17,894 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:19.344277
2024-10-23 02:52:17,894 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.13 perfects.py -n 1_000_000 -w 10 -t
2024-10-23 02:52:43,079 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:20.141020

pause for 5 secs to coalesce ...

python3.13 perfects.py -n 1_000_000 -w 10 -v -t
2024-10-23 02:52:48,125 - perfects - log_exec_ctx - DEBUG - sys.version='3.13.0 (main, Oct  8 2024, 00:00:00) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)]'
2024-10-23 02:52:48,125 - perfects - log_gil_availability - DEBUG - GIL is active
2024-10-23 02:52:48,125 - perfects - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Threads: 'threads'>, max_n=1000000, num_workers=10, verbose=True)
2024-10-23 02:52:48,125 - perfects - <module> - DEBUG - bootstrapping ...
2024-10-23 02:52:48,126 - perfects - find_perfect_numbers_range - DEBUG - Thread-0 processing (1, 100_002)
2024-10-23 02:52:48,137 - perfects - find_perfect_numbers_range - DEBUG - Thread-1 processing (100_003, 200_004)
2024-10-23 02:52:48,147 - perfects - find_perfect_numbers_range - DEBUG - Thread-2 processing (200_005, 300_006)
2024-10-23 02:52:48,163 - perfects - find_perfect_numbers_range - DEBUG - Thread-3 processing (300_007, 400_008)
2024-10-23 02:52:48,173 - perfects - find_perfect_numbers_range - DEBUG - Thread-4 processing (400_009, 500_010)
2024-10-23 02:52:48,329 - perfects - find_perfect_numbers_range - DEBUG - Thread-5 processing (500_011, 600_012)
2024-10-23 02:52:48,339 - perfects - find_perfect_numbers_range - DEBUG - Thread-6 processing (600_013, 700_014)
2024-10-23 02:52:48,350 - perfects - find_perfect_numbers_range - DEBUG - Thread-7 processing (700_015, 800_016)
2024-10-23 02:52:48,360 - perfects - find_perfect_numbers_range - DEBUG - Thread-8 processing (800_017, 900_018)
2024-10-23 02:52:48,370 - perfects - find_perfect_numbers_range - DEBUG - Thread-9 processing (900_019, 1_000_000)
2024-10-23 02:52:53,221 - perfects - find_perfect_numbers - DEBUG - Adding result from Thread-0
2024-10-23 02:52:53,684 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-1
2024-10-23 02:53:02,244 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-4
2024-10-23 02:53:04,179 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-3
2024-10-23 02:53:04,179 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-2
2024-10-23 02:53:07,247 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-8
2024-10-23 02:53:07,247 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-5
2024-10-23 02:53:07,764 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-6
2024-10-23 02:53:08,377 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-7
2024-10-23 02:53:08,398 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-9
2024-10-23 02:53:08,399 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:20.273820
2024-10-23 02:53:08,399 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.13t perfects.py -n 1_000_000 -w 10
2024-10-23 02:53:18,694 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:05.239328

pause for 5 secs to coalesce ...

python3.13t perfects.py -n 1_000_000 -w 10 -v
2024-10-23 02:53:23,751 - perfects - log_exec_ctx - DEBUG - sys.version='3.13.0 experimental free-threading build (main, Oct  8 2024, 00:00:00) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)]'
2024-10-23 02:53:23,751 - perfects - log_gil_availability - DEBUG - GIL is disabled
2024-10-23 02:53:23,751 - perfects - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Threads: 'threads'>, max_n=1000000, num_workers=10, verbose=True)
2024-10-23 02:53:23,751 - perfects - <module> - DEBUG - bootstrapping ...
2024-10-23 02:53:23,753 - perfects - find_perfect_numbers_range - DEBUG - Thread-0 processing (1, 100_002)
2024-10-23 02:53:23,753 - perfects - find_perfect_numbers_range - DEBUG - Thread-1 processing (100_003, 200_004)
2024-10-23 02:53:23,753 - perfects - find_perfect_numbers_range - DEBUG - Thread-2 processing (200_005, 300_006)
2024-10-23 02:53:23,753 - perfects - find_perfect_numbers_range - DEBUG - Thread-3 processing (300_007, 400_008)
2024-10-23 02:53:23,753 - perfects - find_perfect_numbers_range - DEBUG - Thread-4 processing (400_009, 500_010)
2024-10-23 02:53:23,754 - perfects - find_perfect_numbers_range - DEBUG - Thread-5 processing (500_011, 600_012)
2024-10-23 02:53:23,754 - perfects - find_perfect_numbers_range - DEBUG - Thread-6 processing (600_013, 700_014)
2024-10-23 02:53:23,754 - perfects - find_perfect_numbers_range - DEBUG - Thread-7 processing (700_015, 800_016)
2024-10-23 02:53:23,754 - perfects - find_perfect_numbers_range - DEBUG - Thread-8 processing (800_017, 900_018)
2024-10-23 02:53:23,754 - perfects - find_perfect_numbers_range - DEBUG - Thread-9 processing (900_019, 1_000_000)
2024-10-23 02:53:25,200 - perfects - find_perfect_numbers - DEBUG - Adding result from Thread-0
2024-10-23 02:53:25,399 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-1
2024-10-23 02:53:26,285 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-3
2024-10-23 02:53:27,139 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-2
2024-10-23 02:53:27,615 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-5
2024-10-23 02:53:27,864 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-4
2024-10-23 02:53:27,910 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-6
2024-10-23 02:53:28,711 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-9
2024-10-23 02:53:28,714 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-7
2024-10-23 02:53:28,855 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-8
2024-10-23 02:53:28,856 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:05.104479
2024-10-23 02:53:28,856 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.13t perfects.py -n 1_000_000 -w 10 -p
2024-10-23 02:53:39,192 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:05.282542

pause for 5 secs to coalesce ...

python3.13t perfects.py -n 1_000_000 -w 10 -v -p
2024-10-23 02:53:44,252 - perfects - log_exec_ctx - DEBUG - sys.version='3.13.0 experimental free-threading build (main, Oct  8 2024, 00:00:00) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)]'
2024-10-23 02:53:44,252 - perfects - log_gil_availability - DEBUG - GIL is disabled
2024-10-23 02:53:44,252 - perfects - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Processes: 'processes'>, max_n=1000000, num_workers=10, verbose=True)
2024-10-23 02:53:44,252 - perfects - <module> - DEBUG - bootstrapping ...
2024-10-23 02:53:44,335 - perfects - find_perfect_numbers_range - DEBUG - Worker-0 processing (1, 100_002)
2024-10-23 02:53:44,343 - perfects - find_perfect_numbers_range - DEBUG - Worker-1 processing (100_003, 200_004)
2024-10-23 02:53:44,354 - perfects - find_perfect_numbers_range - DEBUG - Worker-2 processing (200_005, 300_006)
2024-10-23 02:53:44,360 - perfects - find_perfect_numbers_range - DEBUG - Worker-3 processing (300_007, 400_008)
2024-10-23 02:53:44,360 - perfects - find_perfect_numbers_range - DEBUG - Worker-4 processing (400_009, 500_010)
2024-10-23 02:53:44,364 - perfects - find_perfect_numbers_range - DEBUG - Worker-5 processing (500_011, 600_012)
2024-10-23 02:53:44,365 - perfects - find_perfect_numbers_range - DEBUG - Worker-6 processing (600_013, 700_014)
2024-10-23 02:53:44,365 - perfects - find_perfect_numbers_range - DEBUG - Worker-7 processing (700_015, 800_016)
2024-10-23 02:53:44,392 - perfects - find_perfect_numbers_range - DEBUG - Worker-8 processing (800_017, 900_018)
2024-10-23 02:53:44,405 - perfects - find_perfect_numbers_range - DEBUG - Worker-9 processing (900_019, 1_000_000)
2024-10-23 02:53:45,748 - perfects - find_perfect_numbers - DEBUG - Adding result from Worker-0
2024-10-23 02:53:45,983 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-1
2024-10-23 02:53:46,477 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-2
2024-10-23 02:53:47,885 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-4
2024-10-23 02:53:48,125 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-3
2024-10-23 02:53:48,410 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-5
2024-10-23 02:53:48,710 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-7
2024-10-23 02:53:48,859 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-8
2024-10-23 02:53:49,047 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-6
2024-10-23 02:53:49,584 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-9
2024-10-23 02:53:49,624 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:05.371516
2024-10-23 02:53:49,624 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.13t perfects.py -n 1_000_000 -w 10 -s
2024-10-23 02:54:19,758 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:25.078917

pause for 5 secs to coalesce ...

python3.13t perfects.py -n 1_000_000 -w 10 -v -s
2024-10-23 02:54:24,814 - perfects - log_exec_ctx - DEBUG - sys.version='3.13.0 experimental free-threading build (main, Oct  8 2024, 00:00:00) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)]'
2024-10-23 02:54:24,814 - perfects - log_gil_availability - DEBUG - GIL is disabled
2024-10-23 02:54:24,814 - perfects - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Single: 'single'>, max_n=1000000, num_workers=10, verbose=True)
2024-10-23 02:54:24,814 - perfects - <module> - DEBUG - bootstrapping ...
2024-10-23 02:54:24,815 - perfects - find_perfect_numbers_range - DEBUG -  processing (1, 1_000_001)
2024-10-23 02:54:49,929 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:25.114644
2024-10-23 02:54:49,929 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.13t perfects.py -n 1_000_000 -w 10 -t
2024-10-23 02:55:00,227 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:05.239508

pause for 5 secs to coalesce ...

python3.13t perfects.py -n 1_000_000 -w 10 -v -t
2024-10-23 02:55:05,281 - perfects - log_exec_ctx - DEBUG - sys.version='3.13.0 experimental free-threading build (main, Oct  8 2024, 00:00:00) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)]'
2024-10-23 02:55:05,281 - perfects - log_gil_availability - DEBUG - GIL is disabled
2024-10-23 02:55:05,281 - perfects - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Threads: 'threads'>, max_n=1000000, num_workers=10, verbose=True)
2024-10-23 02:55:05,281 - perfects - <module> - DEBUG - bootstrapping ...
2024-10-23 02:55:05,283 - perfects - find_perfect_numbers_range - DEBUG - Thread-0 processing (1, 100_002)
2024-10-23 02:55:05,283 - perfects - find_perfect_numbers_range - DEBUG - Thread-1 processing (100_003, 200_004)
2024-10-23 02:55:05,284 - perfects - find_perfect_numbers_range - DEBUG - Thread-2 processing (200_005, 300_006)
2024-10-23 02:55:05,284 - perfects - find_perfect_numbers_range - DEBUG - Thread-3 processing (300_007, 400_008)
2024-10-23 02:55:05,284 - perfects - find_perfect_numbers_range - DEBUG - Thread-4 processing (400_009, 500_010)
2024-10-23 02:55:05,284 - perfects - find_perfect_numbers_range - DEBUG - Thread-5 processing (500_011, 600_012)
2024-10-23 02:55:05,284 - perfects - find_perfect_numbers_range - DEBUG - Thread-6 processing (600_013, 700_014)
2024-10-23 02:55:05,284 - perfects - find_perfect_numbers_range - DEBUG - Thread-7 processing (700_015, 800_016)
2024-10-23 02:55:05,285 - perfects - find_perfect_numbers_range - DEBUG - Thread-8 processing (800_017, 900_018)
2024-10-23 02:55:05,285 - perfects - find_perfect_numbers_range - DEBUG - Thread-9 processing (900_019, 1_000_000)
2024-10-23 02:55:06,960 - perfects - find_perfect_numbers - DEBUG - Adding result from Thread-0
2024-10-23 02:55:07,659 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-1
2024-10-23 02:55:08,152 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-4
2024-10-23 02:55:08,324 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-2
2024-10-23 02:55:08,506 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-5
2024-10-23 02:55:09,369 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-3
2024-10-23 02:55:09,739 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-6
2024-10-23 02:55:09,940 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-7
2024-10-23 02:55:10,128 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-9
2024-10-23 02:55:10,250 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-8
2024-10-23 02:55:10,251 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:04.969282
2024-10-23 02:55:10,251 - perfects - <module> - DEBUG - done.
