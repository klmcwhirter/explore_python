
pause for 5 secs to coalesce ...

python3.14 perfects.py -n 1_000_000 -w 10 -v -p
2025-04-03 12:06:27,514 - app_context - log_exec_ctx - DEBUG - sys.version='3.14.0a6 (main, Mar 17 2025, 00:00:00) [GCC 14.2.1 20250110 (Red Hat 14.2.1-7)]'
2025-04-03 12:06:27,514 - app_context - log_gil_availability - DEBUG - GIL is active
2025-04-03 12:06:27,514 - app_context - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Processes: 'processes'>, max_n=1000000, num_workers=10, verbose=True)
2025-04-03 12:06:27,514 - perfects - <module> - DEBUG - starting ...
2025-04-03 12:06:27,566 - worker - find_perfect_numbers_range - DEBUG - Worker-0 processing (1, 100_002)
2025-04-03 12:06:27,575 - worker - find_perfect_numbers_range - DEBUG - Worker-1 processing (100_003, 200_004)
2025-04-03 12:06:27,586 - worker - find_perfect_numbers_range - DEBUG - Worker-2 processing (200_005, 300_006)
2025-04-03 12:06:27,587 - worker - find_perfect_numbers_range - DEBUG - Worker-3 processing (300_007, 400_008)
2025-04-03 12:06:27,588 - worker - find_perfect_numbers_range - DEBUG - Worker-4 processing (400_009, 500_010)
2025-04-03 12:06:27,588 - worker - find_perfect_numbers_range - DEBUG - Worker-5 processing (500_011, 600_012)
2025-04-03 12:06:27,589 - worker - find_perfect_numbers_range - DEBUG - Worker-6 processing (600_013, 700_014)
2025-04-03 12:06:27,590 - worker - find_perfect_numbers_range - DEBUG - Worker-7 processing (700_015, 800_016)
2025-04-03 12:06:27,591 - worker - find_perfect_numbers_range - DEBUG - Worker-8 processing (800_017, 900_018)
2025-04-03 12:06:27,591 - worker - find_perfect_numbers_range - DEBUG - Worker-9 processing (900_019, 1_000_000)
2025-04-03 12:06:28,167 - perfects - find_perfect_numbers - DEBUG - Adding result from Worker-0
2025-04-03 12:06:28,572 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-1
2025-04-03 12:06:29,299 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-2
2025-04-03 12:06:29,360 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-3
2025-04-03 12:06:29,748 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-4
2025-04-03 12:06:29,908 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-6
2025-04-03 12:06:30,230 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-5
2025-04-03 12:06:30,684 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-7
2025-04-03 12:06:30,839 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-9
2025-04-03 12:06:30,888 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-8
2025-04-03 12:06:30,922 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:03.408228
2025-04-03 12:06:30,922 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.14 perfects.py -n 1_000_000 -w 10 -v -i
2025-04-03 12:06:36,608 - app_context - log_exec_ctx - DEBUG - sys.version='3.14.0a6 (main, Mar 17 2025, 00:00:00) [GCC 14.2.1 20250110 (Red Hat 14.2.1-7)]'
2025-04-03 12:06:36,608 - app_context - log_gil_availability - DEBUG - GIL is active
2025-04-03 12:06:36,608 - app_context - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Interpreters: 'interpreters'>, max_n=1000000, num_workers=10, verbose=True)
2025-04-03 12:06:36,608 - perfects - <module> - DEBUG - starting ...
2025-04-03 12:06:36,643 - worker - find_perfect_numbers_range - DEBUG - Interp-0 processing (1, 100_002)
2025-04-03 12:06:36,643 - worker - find_perfect_numbers_range - DEBUG - Interp-1 processing (100_003, 200_004)
2025-04-03 12:06:36,649 - worker - find_perfect_numbers_range - DEBUG - Interp-2 processing (200_005, 300_006)
2025-04-03 12:06:36,649 - worker - find_perfect_numbers_range - DEBUG - Interp-3 processing (300_007, 400_008)
2025-04-03 12:06:36,651 - worker - find_perfect_numbers_range - DEBUG - Interp-4 processing (400_009, 500_010)
2025-04-03 12:06:36,652 - worker - find_perfect_numbers_range - DEBUG - Interp-5 processing (500_011, 600_012)
2025-04-03 12:06:36,652 - worker - find_perfect_numbers_range - DEBUG - Interp-6 processing (600_013, 700_014)
2025-04-03 12:06:36,654 - worker - find_perfect_numbers_range - DEBUG - Interp-7 processing (700_015, 800_016)
2025-04-03 12:06:36,654 - worker - find_perfect_numbers_range - DEBUG - Interp-8 processing (800_017, 900_018)
2025-04-03 12:06:36,655 - worker - find_perfect_numbers_range - DEBUG - Interp-9 processing (900_019, 1_000_000)
2025-04-03 12:06:37,242 - perfects - find_perfect_numbers - DEBUG - Adding result from Interp-0
2025-04-03 12:06:37,639 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-1
2025-04-03 12:06:38,163 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-2
2025-04-03 12:06:38,440 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-3
2025-04-03 12:06:38,826 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-4
2025-04-03 12:06:39,205 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-6
2025-04-03 12:06:39,515 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-5
2025-04-03 12:06:39,569 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-7
2025-04-03 12:06:39,884 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-9
2025-04-03 12:06:39,894 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-8
2025-04-03 12:06:39,912 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:03.303046
2025-04-03 12:06:39,912 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.14 perfects.py -n 1_000_000 -w 10 -v -s
2025-04-03 12:06:45,610 - app_context - log_exec_ctx - DEBUG - sys.version='3.14.0a6 (main, Mar 17 2025, 00:00:00) [GCC 14.2.1 20250110 (Red Hat 14.2.1-7)]'
2025-04-03 12:06:45,610 - app_context - log_gil_availability - DEBUG - GIL is active
2025-04-03 12:06:45,610 - app_context - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Single: 'single'>, max_n=1000000, num_workers=10, verbose=True)
2025-04-03 12:06:45,610 - perfects - <module> - DEBUG - starting ...
2025-04-03 12:06:45,610 - worker - find_perfect_numbers_range - DEBUG -  processing (1, 1_000_000)
2025-04-03 12:07:01,601 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:15.990855
2025-04-03 12:07:01,601 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.14 perfects.py -n 1_000_000 -w 10 -v -t
2025-04-03 12:07:07,101 - app_context - log_exec_ctx - DEBUG - sys.version='3.14.0a6 (main, Mar 17 2025, 00:00:00) [GCC 14.2.1 20250110 (Red Hat 14.2.1-7)]'
2025-04-03 12:07:07,101 - app_context - log_gil_availability - DEBUG - GIL is active
2025-04-03 12:07:07,101 - app_context - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Threads: 'threads'>, max_n=1000000, num_workers=10, verbose=True)
2025-04-03 12:07:07,101 - perfects - <module> - DEBUG - starting ...
2025-04-03 12:07:07,102 - worker - find_perfect_numbers_range - DEBUG - Thread-0 processing (1, 100_002)
2025-04-03 12:07:07,103 - worker - find_perfect_numbers_range - DEBUG - Thread-1 processing (100_003, 200_004)
2025-04-03 12:07:07,103 - worker - find_perfect_numbers_range - DEBUG - Thread-2 processing (200_005, 300_006)
2025-04-03 12:07:07,103 - worker - find_perfect_numbers_range - DEBUG - Thread-3 processing (300_007, 400_008)
2025-04-03 12:07:07,103 - worker - find_perfect_numbers_range - DEBUG - Thread-4 processing (400_009, 500_010)
2025-04-03 12:07:07,103 - worker - find_perfect_numbers_range - DEBUG - Thread-5 processing (500_011, 600_012)
2025-04-03 12:07:07,103 - worker - find_perfect_numbers_range - DEBUG - Thread-6 processing (600_013, 700_014)
2025-04-03 12:07:07,119 - worker - find_perfect_numbers_range - DEBUG - Thread-7 processing (700_015, 800_016)
2025-04-03 12:07:07,139 - worker - find_perfect_numbers_range - DEBUG - Thread-8 processing (800_017, 900_018)
2025-04-03 12:07:07,150 - worker - find_perfect_numbers_range - DEBUG - Thread-9 processing (900_019, 1_000_000)
2025-04-03 12:07:14,836 - perfects - find_perfect_numbers - DEBUG - Adding result from Thread-0
2025-04-03 12:07:16,035 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-1
2025-04-03 12:07:17,858 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-2
2025-04-03 12:07:18,924 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-3
2025-04-03 12:07:21,234 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-5
2025-04-03 12:07:21,877 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-4
2025-04-03 12:07:22,705 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-7
2025-04-03 12:07:23,223 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-6
2025-04-03 12:07:23,359 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-9
2025-04-03 12:07:23,692 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-8
2025-04-03 12:07:23,692 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:16.590999
2025-04-03 12:07:23,692 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.14t perfects.py -n 1_000_000 -w 10 -v -p
2025-04-03 12:07:29,195 - app_context - log_exec_ctx - DEBUG - sys.version='3.14.0a6 experimental free-threading build (main, Mar 17 2025, 00:00:00) [GCC 14.2.1 20250110 (Red Hat 14.2.1-7)]'
2025-04-03 12:07:29,195 - app_context - log_gil_availability - DEBUG - GIL is disabled
2025-04-03 12:07:29,195 - app_context - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Processes: 'processes'>, max_n=1000000, num_workers=10, verbose=True)
2025-04-03 12:07:29,195 - perfects - <module> - DEBUG - starting ...
2025-04-03 12:07:29,278 - worker - find_perfect_numbers_range - DEBUG - Worker-0 processing (1, 100_002)
2025-04-03 12:07:29,287 - worker - find_perfect_numbers_range - DEBUG - Worker-1 processing (100_003, 200_004)
2025-04-03 12:07:29,301 - worker - find_perfect_numbers_range - DEBUG - Worker-2 processing (200_005, 300_006)
2025-04-03 12:07:29,302 - worker - find_perfect_numbers_range - DEBUG - Worker-3 processing (300_007, 400_008)
2025-04-03 12:07:29,303 - worker - find_perfect_numbers_range - DEBUG - Worker-4 processing (400_009, 500_010)
2025-04-03 12:07:29,304 - worker - find_perfect_numbers_range - DEBUG - Worker-5 processing (500_011, 600_012)
2025-04-03 12:07:29,304 - worker - find_perfect_numbers_range - DEBUG - Worker-6 processing (600_013, 700_014)
2025-04-03 12:07:29,304 - worker - find_perfect_numbers_range - DEBUG - Worker-7 processing (700_015, 800_016)
2025-04-03 12:07:29,305 - worker - find_perfect_numbers_range - DEBUG - Worker-8 processing (800_017, 900_018)
2025-04-03 12:07:29,307 - worker - find_perfect_numbers_range - DEBUG - Worker-9 processing (900_019, 1_000_000)
2025-04-03 12:07:30,710 - perfects - find_perfect_numbers - DEBUG - Adding result from Worker-0
2025-04-03 12:07:30,742 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-1
2025-04-03 12:07:31,517 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-3
2025-04-03 12:07:32,148 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-2
2025-04-03 12:07:32,661 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-5
2025-04-03 12:07:33,065 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-7
2025-04-03 12:07:33,381 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-4
2025-04-03 12:07:33,519 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-9
2025-04-03 12:07:33,562 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-6
2025-04-03 12:07:33,623 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Worker-8
2025-04-03 12:07:33,666 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:04.471091
2025-04-03 12:07:33,666 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.14t perfects.py -n 1_000_000 -w 10 -v -i
2025-04-03 12:07:39,196 - app_context - log_exec_ctx - DEBUG - sys.version='3.14.0a6 experimental free-threading build (main, Mar 17 2025, 00:00:00) [GCC 14.2.1 20250110 (Red Hat 14.2.1-7)]'
2025-04-03 12:07:39,196 - app_context - log_gil_availability - DEBUG - GIL is disabled
2025-04-03 12:07:39,196 - app_context - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Interpreters: 'interpreters'>, max_n=1000000, num_workers=10, verbose=True)
2025-04-03 12:07:39,196 - perfects - <module> - DEBUG - starting ...
2025-04-03 12:07:39,416 - worker - find_perfect_numbers_range - DEBUG - Interp-0 processing (1, 100_002)
2025-04-03 12:07:39,441 - worker - find_perfect_numbers_range - DEBUG - Interp-1 processing (100_003, 200_004)
2025-04-03 12:07:39,443 - worker - find_perfect_numbers_range - DEBUG - Interp-3 processing (300_007, 400_008)
2025-04-03 12:07:39,443 - worker - find_perfect_numbers_range - DEBUG - Interp-2 processing (200_005, 300_006)
2025-04-03 12:07:39,443 - worker - find_perfect_numbers_range - DEBUG - Interp-4 processing (400_009, 500_010)
2025-04-03 12:07:39,443 - worker - find_perfect_numbers_range - DEBUG - Interp-5 processing (500_011, 600_012)
2025-04-03 12:07:39,446 - worker - find_perfect_numbers_range - DEBUG - Interp-6 processing (600_013, 700_014)
2025-04-03 12:07:39,451 - worker - find_perfect_numbers_range - DEBUG - Interp-7 processing (700_015, 800_016)
2025-04-03 12:07:39,451 - worker - find_perfect_numbers_range - DEBUG - Interp-8 processing (800_017, 900_018)
2025-04-03 12:07:39,451 - worker - find_perfect_numbers_range - DEBUG - Interp-9 processing (900_019, 1_000_000)
2025-04-03 12:07:40,308 - perfects - find_perfect_numbers - DEBUG - Adding result from Interp-0
2025-04-03 12:07:41,273 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-1
2025-04-03 12:07:42,342 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-2
2025-04-03 12:07:42,446 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-3
2025-04-03 12:07:42,592 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-5
2025-04-03 12:07:43,155 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-9
2025-04-03 12:07:43,410 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-4
2025-04-03 12:07:43,628 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-8
2025-04-03 12:07:43,741 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-6
2025-04-03 12:07:43,938 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Interp-7
2025-04-03 12:07:44,023 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:04.827538
2025-04-03 12:07:44,023 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.14t perfects.py -n 1_000_000 -w 10 -v -s
2025-04-03 12:07:49,596 - app_context - log_exec_ctx - DEBUG - sys.version='3.14.0a6 experimental free-threading build (main, Mar 17 2025, 00:00:00) [GCC 14.2.1 20250110 (Red Hat 14.2.1-7)]'
2025-04-03 12:07:49,596 - app_context - log_gil_availability - DEBUG - GIL is disabled
2025-04-03 12:07:49,596 - app_context - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Single: 'single'>, max_n=1000000, num_workers=10, verbose=True)
2025-04-03 12:07:49,596 - perfects - <module> - DEBUG - starting ...
2025-04-03 12:07:49,596 - worker - find_perfect_numbers_range - DEBUG -  processing (1, 1_000_000)
2025-04-03 12:08:12,723 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:23.126717
2025-04-03 12:08:12,723 - perfects - <module> - DEBUG - done.

pause for 5 secs to coalesce ...

python3.14t perfects.py -n 1_000_000 -w 10 -v -t
2025-04-03 12:08:18,336 - app_context - log_exec_ctx - DEBUG - sys.version='3.14.0a6 experimental free-threading build (main, Mar 17 2025, 00:00:00) [GCC 14.2.1 20250110 (Red Hat 14.2.1-7)]'
2025-04-03 12:08:18,336 - app_context - log_gil_availability - DEBUG - GIL is disabled
2025-04-03 12:08:18,336 - app_context - log_exec_ctx - DEBUG - AppContext(mode=<ExecutionMode.Threads: 'threads'>, max_n=1000000, num_workers=10, verbose=True)
2025-04-03 12:08:18,336 - perfects - <module> - DEBUG - starting ...
2025-04-03 12:08:18,338 - worker - find_perfect_numbers_range - DEBUG - Thread-0 processing (1, 100_002)
2025-04-03 12:08:18,338 - worker - find_perfect_numbers_range - DEBUG - Thread-1 processing (100_003, 200_004)
2025-04-03 12:08:18,338 - worker - find_perfect_numbers_range - DEBUG - Thread-2 processing (200_005, 300_006)
2025-04-03 12:08:18,338 - worker - find_perfect_numbers_range - DEBUG - Thread-3 processing (300_007, 400_008)
2025-04-03 12:08:18,338 - worker - find_perfect_numbers_range - DEBUG - Thread-4 processing (400_009, 500_010)
2025-04-03 12:08:18,338 - worker - find_perfect_numbers_range - DEBUG - Thread-5 processing (500_011, 600_012)
2025-04-03 12:08:18,339 - worker - find_perfect_numbers_range - DEBUG - Thread-6 processing (600_013, 700_014)
2025-04-03 12:08:18,339 - worker - find_perfect_numbers_range - DEBUG - Thread-7 processing (700_015, 800_016)
2025-04-03 12:08:18,339 - worker - find_perfect_numbers_range - DEBUG - Thread-8 processing (800_017, 900_018)
2025-04-03 12:08:18,339 - worker - find_perfect_numbers_range - DEBUG - Thread-9 processing (900_019, 1_000_000)
2025-04-03 12:08:19,612 - perfects - find_perfect_numbers - DEBUG - Adding result from Thread-0
2025-04-03 12:08:19,819 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-1
2025-04-03 12:08:20,858 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-2
2025-04-03 12:08:21,429 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-4
2025-04-03 12:08:21,742 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-5
2025-04-03 12:08:21,758 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-3
2025-04-03 12:08:21,824 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-8
2025-04-03 12:08:22,485 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-6
2025-04-03 12:08:22,921 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-7
2025-04-03 12:08:23,071 - perfects - find_perfect_numbers - DEBUG - Skipping empty result from Thread-9
2025-04-03 12:08:23,072 - perfects - <module> - INFO - [6, 28, 496, 8128] are perfect numbers in 0:00:04.735871
2025-04-03 12:08:23,072 - perfects - <module> - DEBUG - done.
